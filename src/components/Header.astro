---
import ThemeIcon from "./ThemeIcon.astro"
---

<header class="fixed top-0 left-0 right-0 z-50 flex justify-between items-center py-3 px-5 w-full lg:px-20 bg-(--color-background) bg-opacity-95 backdrop-blur-sm shadow-sm transition-all duration-300">
  
  <div></div>

  <!-- Contenedor para botones -->
  <div class="flex items-center gap-4 lg:order-last">
    <!-- Botón de menú -->
    <button id="menuToggle" class="lg:hidden flex items-center justify-center w-10 h-10 relative">
      <img id="menuIconDark" class="absolute w-8 h-8 transition-all duration-300 opacity-100" src="/menu_dark.svg" alt="menu" />
      <img id="menuIconLight" class="absolute w-8 h-8 transition-all duration-300 opacity-0" src="/menu_light.svg" alt="menu" />
    </button>
    
    <!-- Botón de cambio de tema -->
    <ThemeIcon />
  </div>

  <!-- Menú de navegación con animación -->
  <nav id="navMenu" 
  class="absolute top-16 left-0 w-full bg-(--color-background) transition-all duration-300 opacity-0 scale-95 hidden lg:opacity-100 lg:scale-100 lg:static lg:w-auto lg:flex lg:flex-row lg:gap-x-10 lg:bg-transparent dark:lg:bg-transparent">
    <ul class="flex flex-col items-center gap-y-4 py-4 lg:flex-row lg:gap-x-10 text-lg font-normal font-[Poppins_500]">
      <li><a href="#inicio" class="block px-4 py-2 nav-link">Inicio</a></li>
      <li><a href="#experiencia" class="block px-4 py-2 nav-link">Experiencia</a></li>
      <li><a href="#proyectos" class="block px-4 py-2 nav-link">Proyectos</a></li>
    </ul>
  </nav>
</header>

<!-- Espaciador para compensar el navbar fijo -->
<div class="h-16"></div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuToggle = document.getElementById("menuToggle");
    const navMenu = document.getElementById("navMenu");
    const menuIconDark = document.getElementById("menuIconDark");
    const menuIconLight = document.getElementById("menuIconLight");
    const themeToggle = document.getElementById("themeToggle");
    const navLinks = document.querySelectorAll(".nav-link");
    const header = document.querySelector("header");

    // Detectar el tema guardado y aplicar el ícono correcto al cargar la página
    const isDarkMode = localStorage.getItem("theme") === "dark" || 
                       (!localStorage.getItem("theme") && window.matchMedia("(prefers-color-scheme: dark)").matches);

    if (isDarkMode) {
      menuIconDark.classList.add("opacity-100");
      menuIconDark.classList.remove("opacity-0");
      menuIconLight.classList.add("opacity-0");
      menuIconLight.classList.remove("opacity-100");
    } else {
      menuIconDark.classList.add("opacity-0");
      menuIconDark.classList.remove("opacity-100");
      menuIconLight.classList.add("opacity-100");
      menuIconLight.classList.remove("opacity-0");
    }

    // Función para cerrar el menú móvil
    function closeMenu() {
      navMenu.classList.remove("opacity-100", "scale-100");
      navMenu.classList.add("opacity-0", "scale-95");
      
      // Restablecer la rotación del ícono del menú
      menuIconDark.classList.remove("rotate-90");
      menuIconLight.classList.remove("rotate-90");
      
      // Espera a que termine la transición para ocultarlo completamente
      setTimeout(() => {
        navMenu.classList.add("hidden");
      }, 300); // La duración debe coincidir con la de la transición CSS
    }

    // Evento para abrir/cerrar el menú
    menuToggle.addEventListener("click", () => {
      const isHidden = navMenu.classList.contains("hidden");

      if (isHidden) {
        navMenu.classList.remove("hidden");
        setTimeout(() => {
          navMenu.classList.remove("opacity-0", "scale-95");
          navMenu.classList.add("opacity-100", "scale-100");
        }, 10);
        menuIconDark.classList.add("rotate-90");
        menuIconLight.classList.add("rotate-90");
      } else {
        closeMenu();
      }
    });

    // Evento para cambiar el ícono del menú cuando cambia el tema
    themeToggle.addEventListener("click", () => {
      const isDark = document.documentElement.classList.contains("dark");
      if (isDark) {
        menuIconDark.classList.add("opacity-100");
        menuIconDark.classList.remove("opacity-0");
        menuIconLight.classList.add("opacity-0");
        menuIconLight.classList.remove("opacity-100");
      } else {
        menuIconDark.classList.add("opacity-0");
        menuIconDark.classList.remove("opacity-100");
        menuIconLight.classList.add("opacity-100");
        menuIconLight.classList.remove("opacity-0");
      }
    });

    // Cambiar la apariencia del navbar al hacer scroll
    window.addEventListener("scroll", () => {
      if (window.scrollY > 10) {
        header.classList.add("shadow-md");
        header.classList.remove("py-3");
        header.classList.add("py-2");
      } else {
        header.classList.remove("shadow-md");
        header.classList.remove("py-2");
        header.classList.add("py-3");
      }
    });

    // Marcar el enlace "Inicio" como activo por defecto
    const homeLink = document.querySelector('.nav-link[href="#inicio"]');
    if (homeLink) {
      homeLink.classList.add("text-(--color-accent)");
    }

    // Evento para navegar suavemente al hacer clic en los enlaces
    navLinks.forEach(link => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        
        // Cerrar el menú móvil si está abierto y en pantalla móvil
        if (window.innerWidth < 1024) {
          closeMenu(); // Usar la función reutilizable que también restablece el ícono
        }

        // Actualizar clases activas en los enlaces
        navLinks.forEach(l => l.classList.remove("text-(--color-accent)"));
        link.classList.add("text-(--color-accent)");
        
        // Obtener el ID del destino
        const targetId = link.getAttribute("href").substring(1);
        const targetElement = document.getElementById(targetId);
        
        if (targetElement) {
          // Desplazamiento suave a la sección
          window.scrollTo({
            top: targetElement.offsetTop - header.offsetHeight, // Offset dinámico basado en la altura del header
            behavior: "smooth"
          });
        }
      });
    });

    // Detectar qué sección está visible durante el scroll
    window.addEventListener("scroll", () => {
      const scrollPosition = window.scrollY + header.offsetHeight + 10; // Añadir offset
      
      const sections = [
        document.getElementById("inicio"),
        document.getElementById("experiencia"),
        document.getElementById("proyectos")
      ];
      
      sections.forEach(section => {
        if (!section) return;
        
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;
        
        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          // Quitar clase activa de todos los enlaces
          navLinks.forEach(link => {
            link.classList.remove("text-(--color-accent)");
          });
          
          // Añadir clase activa al enlace correspondiente
          const activeLink = document.querySelector(`.nav-link[href="#${section.id}"]`);
          if (activeLink) {
            activeLink.classList.add("text-(--color-accent)");
          }
        }
      });
    });
  });
</script>

<style>
  .nav-link.text-\(\-\-color-accent\) {
    position: relative;
  }
  
  .nav-link.text-\(\-\-color-accent\)::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 25%;
    width: 50%;
    height: 2px;
    background-color: var(--color-accent);
  }
</style>